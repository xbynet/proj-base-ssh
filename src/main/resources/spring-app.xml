<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

    <context:component-scan base-package="net.xby1993" ><!--  use-default-filters="false"-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

	<bean id="springContextHolder"  class="net.xby1993.common.util.SpringContextHolder"/>
    <!-- 引入jedis配置文件
     https://my.oschina.net/u/866380/blog/521658
     -->
 <context:property-placeholder location="classpath*:conf/*.properties"
                                  ignore-unresolvable="true" />

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal">
            <value>${redis.pool.maxActive}</value>
        </property>
        <property name="maxIdle">
            <value>${redis.pool.maxIdle}</value>
        </property>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="redisUrl" class="java.net.URI">
        <constructor-arg value="${redis.uri}"></constructor-arg>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" ref="redisUrl">
        </constructor-arg>
    </bean>

<!--     <import resource="classpath:META-INF/cxf/cxf.xml" />  
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />  
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<import resource="classpath:cxf-servlet.xml" />  --> 
	
	
	   <!-- 阿里 druid数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="url" value="${ds.url}"/>
        <property name="username" value="${ds.username}"/>
        <property name="password" value="${ds.password}"/>
        <property name="driverClassName" value="${ds.driverClassName}"/>
        <!-- <property name="filters" value="${ds.filters}"/> -->
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${ds.maxActive}"/>
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="${ds.initialSize}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${ds.maxWait}"/>
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${ds.minIdle}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${ds.validationQuery}"/>
        <property name="testWhileIdle" value="${ds.testWhileIdle}"/>
        <property name="testOnBorrow" value="${ds.testOnBorrow}"/>
        <property name="testOnReturn" value="${ds.testOnReturn}"/>
<!--        <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
         打开removeAbandoned功能
        <property name="removeAbandoned" value="${removeAbandoned}"/>
        1800秒，也就是30分钟
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
        关闭abanded连接时输出错误日志
        <property name="logAbandoned" value="${logAbandoned}"/> -->
    </bean>

    
   <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 扫描实体路径 -->  
        <property name="packagesToScan" value="net.xby1993.springmvc.**.entity" />
		<property name="hibernateProperties">
             <props>
                 <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                 <prop key="hibernate.show_sql">true</prop>
                 <prop key="hibernate.format_sql">true</prop>
                 <prop key="hibernate.hbm2ddl.auto">update</prop>
                 <!-- 数据库批量查询最大数 -->  
                <prop key="hibernate.jdbc.fetch_size">50</prop>  
                <!-- 数据库批量更新、添加、删除操作最大数 -->  
                <prop key="hibernate.jdbc.batch_size">50</prop>    
                <!-- 命名规则 My_NAME->MyName java驼峰变db下划线命名-->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				<!--#懒加载配置，防止no session -->
                <prop name="hibernate.enable_lazy_load_no_trans">true</prop>
             </props>
         </property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
        	<tx:method name="add*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>  
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
			<tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <!-- 事务处理 -->
    <aop:config>
        <aop:pointcut id="pc" expression="execution(* net.xby1993..service..*(..))"/>
        <aop:advisor pointcut-ref="pc" advice-ref="txAdvice"/>
    </aop:config>
    <!--  支持@Transactional注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- ================ Shiro start ================ 
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="ShiroRealm"/>
    </bean>


    <bean id="ShiroRealm" class="com.css.sword.security.shiro.SwordAuthorizingRealm"></bean>

   
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>

        <property name="loginUrl" value="/"/>

        <property name="successUrl" value="/landchina/index.do"/>

        <property name="unauthorizedUrl" value="/landchina/index.do"/>

        <property name="filterChainDefinitions">
            <value>
                /static/login/** = anon
                /static/js/myjs/** = authc
                /static/js/** = anon
                /code.do = anon
                /login_login = anon
                /landchina**/** = anon
                /app**/** = anon
                /weixin/** = anon
                /main/** = authc
                /textmsg/** = authc
            </value>
        </property>
    </bean>
   ================ Shiro end ================ -->
	<!-- 配置邮件发送器 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"

		p:host="${mail.host}" p:port="${mail.port}" p:username="${mail.name}"
		p:password="${mail.password}">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- <property name="javaMailProperties"> <props> <prop key="mail.smtp.auth">true</prop> 
			<prop key="mail.smtp.socketFactory.port">587</prop> <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> 
			<prop key="mail.smtp.socketFactory.fallback">false</prop> </props> </property> -->
		<!-- SMTP服务器验证 -->
		<property name="javaMailProperties">
			<props>
				<!-- 验证身份 -->
				<prop key="mail.smtps.auth">true</prop>

			</props>
		</property>
	</bean>
   
<!-- 任务调度
http://docs.spring.io/spring/docs/current/spring-framework-reference/htmlsingle/#scheduling
 -->
<task:annotation-driven executor="myExecutor" scheduler="myScheduler"/>
<task:executor id="myExecutor" pool-size="5"/>
<task:scheduler id="myScheduler" pool-size="10"/>


<import resource="spring-quartz.xml"/>
</beans>